@page "/bestand-anzeigen"
@using Lagerverwaltung.Data
@using Lagerverwaltung.Models
@using Microsoft.EntityFrameworkCore
@inject LagerDbContext DbContext
@rendermode InteractiveServer

<h3>Bestand anzeigen</h3>

<div>
    <label>Filter nach Artikelname:</label>
    <InputText @bind-Value="FilterText" />
</div>

<table class="table">
    <thead>
        <tr>
            <th>Artikelnummer</th>
            <th>Artikelname</th>
            <th>Beschreibung</th>
            <th>Menge</th>
            <th>Preis pro Einheit</th>
            <th>Gesamtwert</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var artikel in GefilterteArtikel)
        {
            <tr style="@GetRowColor(artikel)">
                <td>@artikel.ArtikelId</td>
                <td>@artikel.Artikelname</td>
                <td>@artikel.Beschreibung</td>
                <td>@artikel.Menge</td>
                <td>@artikel.PreisProEinheit</td>
                <td>@(artikel.Menge * artikel.PreisProEinheit)</td>
            </tr>
        }
    </tbody>
</table>

@code {
    private string FilterText { get; set; } = string.Empty;
    private List<Artikel> ArtikelListe = new();
    private List<Artikel> GefilterteArtikel => ArtikelListe
        .Where(a => a.Artikelname.Contains(FilterText, StringComparison.OrdinalIgnoreCase))
        .ToList();

    protected override async Task OnInitializedAsync()
    {
        ArtikelListe = await DbContext.Artikel.ToListAsync();
    }

    private string GetRowColor(Artikel artikel)
    {
        return artikel.Menge < 3 ? "background-color: red;" : string.Empty;
    }
}
