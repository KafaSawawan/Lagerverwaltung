@page "/lagerplätze"
@using Lagerverwaltung.Data
@using Lagerverwaltung.Models
@using Microsoft.EntityFrameworkCore
@inject LagerDbContext DbContext
@rendermode InteractiveServer
@inject NavigationManager Navigation

<h3>Lagerplätze</h3>
<div class="d-flex justify-content-start mb-3">
    <button @onclick="Hinzufuegen">
        ➕ Neuer Lagerplatz
    </button>
</div>

<table class="table">
    <thead>
        <tr>
            <th>Lagerplatz Nummer</th>
            <th>Name</th>
            <th>Standort</th>
            <th>Aktionen</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var lagerplatz in Lagerplätze)
        {
            <tr>
                <td>@lagerplatz.LagerplatzId</td>
                <td>@lagerplatz.Name</td>
                <td>@lagerplatz.Standort</td>
                <td>
                    <button @onclick="() => Bearbeiten(lagerplatz.LagerplatzId)">✏️ Bearbeiten</button>
                    <button @onclick="() => Löschen(lagerplatz.LagerplatzId)">🗑️ Löschen</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private List<Lagerplatz> Lagerplätze = new();

    protected override async Task OnInitializedAsync()
    {
        Lagerplätze = await DbContext.Lagerplatz.ToListAsync();
    }

    private void Hinzufuegen()
    {
        Navigation.NavigateTo("/lagerplatz-hinzufügen");
    }

    private void Bearbeiten(int id)
    {
        Navigation.NavigateTo($"/lagerplatz-bearbeiten/{id}");
    }

    private async Task Löschen(int id)
    {
        var lagerplatz = await DbContext.Lagerplatz.FindAsync(id);
        if (lagerplatz != null)
        {
            DbContext.Lagerplatz.Remove(lagerplatz);
            await DbContext.SaveChangesAsync();
            Lagerplätze.Remove(lagerplatz);
        }
    }
}
